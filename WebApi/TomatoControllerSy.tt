<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs"#>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="SY_T4Helper" #>
<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="$(SolutionDir)T4/SY_T4Helper.dll" #>
<#@ include file="$(SolutionDir)T4/T4Api/TomatoControllerSy.ttinclude" #>
<#@ include file="$(SolutionDir)T4/T4Api/TomatoWebConfigSy.ttinclude" #>


<# 
    // 配置config
    string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
    MyConfig myConfig=ConfigHandler.GetConfigByFile(solutionsPath+"T4\\T4Helper.json"); 
    myConfig.IsOverrideFile=true;
    //myConfig.NameSpace+=".Repository";
    List<string> SonTableList = new List<string>();
    SonTableList.AddRange(myConfig.SonTableList);

    List<DbTable> tableInfos=DbHandler.GetDbTables(myConfig.ConnectionString, myConfig.TableName);
    string curPath = Path.GetDirectoryName(Host.TemplateFile);
    StringBuilder webConfigStr = new StringBuilder();

    foreach(DbTable tableInfo in tableInfos)
    {
        string tableName=tableInfo.TableName.Replace(myConfig.TableName,"");
        if(!SonTableList.Exists(x=>x==tableName))
        {
            continue;
        }

        string fileName = string.Format(@"{0}\{1}.cs",curPath+@"\Controllers", StringHandler.GetCamel(tableName)+"Controller");

        TomatoControllerSy template = new TomatoControllerSy(tableInfo,myConfig);
        template.Output.Encoding = Encoding.UTF8;
        template.Output.PreserveExistingFile =!myConfig.IsOverrideFile;
        template.RenderToFile(fileName);

        webConfigStr.Append(string.Format(@"<register type=" + "\"{0}.BLL.I{1}Service,{0}.BLL\" mapTo=\"{0}.BLL.{1}Service,{0}.BLL\"/>" + @"
            <register type=" + "\"{0}.DAL.I{1}Repository,{0}.DAL\" mapTo=\"{0}.DAL.{1}Repository,{0}.DAL\"/>" ,myConfig.NameSpace, tableName));
        webConfigStr.Append("\r\n");
    }
    TomatoWebConfigSy template1 = new TomatoWebConfigSy(webConfigStr.ToString());
    template1.Output.Encoding = Encoding.UTF8;
    template1.Output.PreserveExistingFile =!myConfig.IsOverrideFile;
    template1.RenderToFile(curPath+@"\unity.config");


#>







